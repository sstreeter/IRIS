import sys
from typing import Any

from ...helpers import MockAppInstance, Helpers

def generate_script_check_report(app_instance: Any, helpers: Any, browser_preference: str = "System Default"):
    """Looks for evidence of suspicious scripts and payloads."""
    app_instance.log_output("\n--- Generating Potentially Malicious Scripts Report ---")
    
    html_body = "<h2>Potentially Malicious Scripts & Payloads</h2>"
    found_suspicious_activity = False

    if sys.platform.startswith("linux") or sys.platform == "darwin":
        # Check Shell History
        html_body += "<h3>Shell History Analysis</h3>"
        history_files = ["~/.bash_history", "~/.zsh_history"]
        suspicious_pattern = "curl|wget|python|perl|nc|netcat|base64"
        history_hits = ""

        for history_file in history_files:
            # The tilde '~' needs to be expanded by the shell
            command = f"grep -E '{suspicious_pattern}' {history_file}"
            output = helpers.run_command(command, check_shell=True, app_instance=app_instance)
            if output:
                history_hits += f"<h4>Suspicious Commands in {history_file}:</h4><pre>{output}</pre>"
        
        if history_hits:
            html_body += history_hits
            found_suspicious_activity = True
        else:
            html_body += "<p>No suspicious commands found in shell history files.</p>"

        # Check Common Payload Directories
        html_body += "<h3>Payload Directory Analysis</h3>"
        payload_dirs = ["/tmp", "~/Downloads"]
        dir_hits = ""

        for payload_dir in payload_dirs:
            # Check for executable or script files
            command = f"ls -la {payload_dir} | grep -E '\\.sh$|\\.py$|\\.pl$|\\.out$'"
            output = helpers.run_command(command, check_shell=True, app_instance=app_instance)
            if output:
                dir_hits += f"<h4>Potential Payloads in {payload_dir}:</h4><pre>{output}</pre>"
        
        if dir_hits:
            html_body += dir_hits
            found_suspicious_activity = True
        else:
            html_body += "<p>No files matching common payload extensions found in /tmp or ~/Downloads.</p>"
            
    else:
        html_body += "<p>Suspicious script checks are currently implemented for Linux/macOS.</p>"

    if not found_suspicious_activity:
         html_body += "<h3>Result</h3><p>No obvious suspicious shell commands or payloads were detected in the checked locations.</p>"


    helpers.generate_report_html(
        app_instance, 
        app_instance.suspect_computer_name, 
        "Script_Check_Report.html", 
        "Potentially Malicious Scripts Report", 
        html_body,
        browser_preference=browser_preference
    )